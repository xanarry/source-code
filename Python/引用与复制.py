#b引用a,使用同一个内容,任意一个的修改将相互影响
a = [1, 2, 3, 4]
b = a
b[0] = -100
print(a)
print(b)

#使用浅复制,添加不会修改到原有元素,修改原有索引上的元素会对原始对象进行修改
a = [1, 2, 3, [7, 8, 9]]
b = list(a)#浅复制a
print(a)
print(b)

b[1] = -99#在b中修改元素,但是a中的a[1]并没有改变
print(a)
print(b)

b[3][0] = -99#在b中修改b[3],a[3]的值也同时改变了
print(a)
print(b)

'''
a第一个元素是字符串属于不可变类型，第二个元素是
列表属于可变类型。因此我们进行拷贝对象时，字符
串被显示拷贝重新创建了一个字符串，而列表只是复
制引用，所以改变列表的元素会影响所有引用对象.
复制对象的时候，我们可以看到所有元素的id都一直，
我们分别改变了a与b对象的第一个字符串元素，因为
字符串是不可变对象，所以改变后等于新创建，于是
a与b的第一个字符串元素id不一致。而a与b的第二个
元素都是列表可变对象，所以无论修改任何一个id值
都表示一个指针，始终影响其它引用对象的值。
'''

import copy#导入copy,使用深度复制,复制完后两个对象互不影响
a = [1, 2, 3, [7, 8, 9]]
b = copy.deepcopy(a)
print(a)
print(b)
b[3][1] = 90
a[3][0] = 78
print(a)
print(b)